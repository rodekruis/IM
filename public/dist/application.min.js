"use strict";var ApplicationConfiguration=function(){var applicationModuleName="Digital Operations Centre",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","leaflet-directive","angular-centered","akoenig.deckgrid","ui.sortable","ngRoute","angular-lodash","ngGrid","formsAngular","angular-carousel","cgBusy","gettext","ui-iconpicker"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("forms"),ApplicationConfiguration.registerModule("maps"),ApplicationConfiguration.registerModule("monitors"),ApplicationConfiguration.registerModule("sources"),ApplicationConfiguration.registerModule("users"),angular.module("maps").run(["gettextCatalog","Authentication",function(gettextCatalog,Authentication){var language="nl_NL",user=Authentication.user;user&&user.language&&""!==user.language&&(language=user.language.id),gettextCatalog.currentLanguage=language,gettextCatalog.debug=!0}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("otherwise",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},angular.element(document).on("click.nav",".navbar-collapse.in",function(e){$(e.target).is("a")&&$(this).removeClass("in").addClass("collapse")})}]),angular.module("core").controller("HomeController",["$scope","Authentication","leafletData",function($scope,Authentication,leafletData){$scope.authentication=Authentication,angular.extend($scope,{defaults:{tileLayer:"http://{s}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png",maxZoom:14,zoomControl:!1,path:{weight:10,color:"#800000",opacity:1}}}),angular.extend($scope,{layers:{baselayers:{osm:{name:"OpenStreetMap",url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",type:"xyz"}}}}),angular.extend($scope,{center:{lat:52.1185523,lng:5.2097174,zoom:10}}),leafletData.getMap().then(function(cartomap){cartomap.invalidateSize()})}]),angular.module("core").directive("heightresize",["$window",function($window){return{restrict:"A",link:function(scope,elem){var window=angular.element($window);scope.onResize=function(){$(elem).height(window.height()-$(".navbar").height()-$(".mapHeader").height())},scope.onResize(),window.bind("resize",function(){scope.onResize(),scope.$apply()})}}}]).directive("logoresize",["$window",function($window){return{restrict:"A",link:function(scope,elem){var window=angular.element($window);scope.onResize=function(){$(elem).height(.75*(window.height()-$(".navbar").height()-$(".mapHeader").height()))},scope.onResize(),window.bind("resize",function(){scope.onResize(),scope.$apply()})}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender}),this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].menuItemURL===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.addMenu("topbar",!0)}]),angular.module("maps").run(["Menus","gettextCatalog",function(Menus,gettextCatalog){var title=gettextCatalog.getString("Data management");Menus.addMenuItem("topbar",title,"forms","forms",!1,["admin"])}]),angular.module("formsAngular").config(["cssFrameworkServiceProvider",function(cssFrameworkService){cssFrameworkService.setOptions({framework:"bs3"})}]).config(["urlServiceProvider",function(urlService){urlService.setOptions({html5Mode:!1,hashPrefix:"!/forms"})}]),angular.module("forms").config(["$urlRouterProvider","$stateProvider",function($urlRouterProvider,$stateProvider){$stateProvider.state("model::all",{url:"/forms",templateUrl:"modules/forms/views/list-forms.client.view.html"}).state("model::edit",{url:"/forms/:model/:id/edit",templateUrl:"modules/forms/views/base-edit.client.view.html"}).state("model::new",{url:"/forms/:model/new",templateUrl:"modules/forms/views/base-edit.client.view.html"}).state("model::list",{url:"/forms/:model",templateUrl:"modules/forms/views/base-list.client.view.html"})}]),angular.module("forms").controller("FormsController",["$scope","$stateParams","$location","Authentication","Forms",function($scope,$stateParams,$location,Authentication,Forms){$scope.authentication=Authentication,$scope.find=function(){$scope.forms=Forms.query()}}]),angular.module("forms").factory("Forms",["$resource",function($resource){return $resource("api/models",{},{query:{method:"GET",isArray:!0}})}]),angular.module("maps").run(["Menus","gettextCatalog",function(Menus,gettextCatalog){var title=gettextCatalog.getString("Maps");Menus.addMenuItem("topbar",title,"maps","/maps",!0)}]),angular.module("maps").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMaps",{url:"/maps",templateUrl:"modules/maps/views/list-maps.client.view.html"}).state("createMap",{url:"/maps/create",templateUrl:"modules/maps/views/create-map.client.view.html"}).state("proxy",{url:"/maps/proxy/:url",templateUrl:"modules/maps/views/create-map.client.view.html"}).state("viewMap",{url:"/maps/:mapId",templateUrl:"modules/maps/views/view-map.client.view.html"}).state("viewMapCenter",{url:"/maps/:mapId/:centerLat/:centerLng/:centerZoom/:activeLayers",templateUrl:"modules/maps/views/view-map.client.view.html"}).state("editMap",{url:"/maps/:mapId/edit",templateUrl:"modules/maps/views/edit-map.client.view.html"}).state("icons",{url:"/icons",templateUrl:"modules/maps/views/icons.client.view.html"})}]),angular.module("maps").controller("MapsController",["$scope","$stateParams","$location","Authentication","Maps","$window","leafletData","$compile","$parse","CartoDB","Proxy","$modal","_",function($scope,$stateParams,$location,Authentication,Maps,$window,leafletData,$compile,$parse,CartoDB,Proxy,$modal,_){$scope.authentication=Authentication,$scope.L=$window.L,$scope.cartodb=$window.cartodb,$scope.LMap=null,$scope.subLayers=[],$scope.bounds=null,$scope.overlayLayers={},$scope.activeLayers=[],$scope.baseLayers={},$scope.wmsLegends=[],$scope.wfsLegends=[],$scope.visualisationLegends=[],$scope.infos={},$scope.mapCenter={},$scope.baseUrl=$location.absUrl().substring(0,$location.absUrl().length-$location.path().length),$scope.mapParameters=$location.path().split("/").slice(0,3).join("/"),$scope.columns=4,$scope.defaults.tileLayer="",$scope.create=function(){var map=new Maps({title:this.title});map.$save(function(response){$location.path("maps/"+response._id)},function(errorResponse){$scope.addAlert("danger",errorResponse.data.message)}),this.title=""},$scope.remove=function(map){if(map){map.$remove();for(var i in $scope.maps)$scope.maps[i]===map&&$scope.maps.splice(i,1)}else $scope.map.$remove(function(){$location.path("maps")})},$scope.update=function(){var map=$scope.map;map.$update(function(){$location.path("maps/"+map._id)},function(errorResponse){$scope.addAlert("danger",errorResponse.data.message)})},$scope.find=function(){Maps.query(function(data){$scope.maps=data,findCategories(),$scope.prepareMapsList()},function(error){$scope.addAlert("danger",error.data.message)})},$scope.categories=[];var findCategories=function(){angular.forEach($scope.maps,function(value){null!==value.category&&-1===$scope.categories.indexOf(value.category.name)&&$scope.categories.push(value.category.name)})};$scope.$watch("showCategory",function(){$scope.prepareMapsList()}),$scope.findOne=function(){Maps.get({mapId:$stateParams.mapId},function(data){$scope.map=data},function(error){$scope.addAlert("danger",error.data.message)})},$scope.addActiveLayer=function(id){-1===$scope.activeLayers.indexOf(id)&&$scope.activeLayers.push(id)},$scope.deleteActiveLayer=function(id){var index=$scope.activeLayers.indexOf(id);index>-1&&$scope.activeLayers.splice(index,1)},$scope.prepareMapsList=function(){if("undefined"!=typeof $scope.maps){var newArr=$scope.maps,filteredArr=newArr;"undefined"!=typeof $scope.showCategory&&" "!==$scope.showCategory&&(filteredArr=_.filter(newArr,function(map){return"undefined"==typeof map.category||null===map.category?!1:map.category.name===$scope.showCategory}));var sorted=_.sortBy(filteredArr,function(map){return map.title.toLowerCase()});$scope.splitMaps=[];for(var i=0;i<sorted.length;i+=$scope.columns)$scope.splitMaps.push(sorted.slice(i,i+$scope.columns))}},$scope.alerts=[],$scope.addAlert=function(messageType,message){$scope.alerts.push({type:messageType,msg:message})},$scope.closeAlert=function(index){$scope.alerts.splice(index,1)},$scope.loadSearchControl=function(cartomap){function googleGeocoding(text,callResponse){geocoder.geocode({address:text},callResponse)}function filterJSONCall(rawjson){var key,loc,json={};for(var i in rawjson)key=rawjson[i].formatted_address,loc=$scope.L.latLng(rawjson[i].geometry.location.lat(),rawjson[i].geometry.location.lng()),json[key]=loc;return json}var geocoder=new google.maps.Geocoder;cartomap.addControl(new $scope.L.Control.Search({wrapper:"findbox",text:"Zoeken...",textCancel:"Cancel",textErr:"Locatie niet gevonden",callData:googleGeocoding,filterJSON:filterJSONCall,markerLocation:!0,autoType:!1,autoCollapse:!0,minLength:2,zoom:13}))},$scope.loadLayers=function(){leafletData.getMap().then(function(cartomap){$scope.LMap=cartomap,cartomap.on("moveend",function(){$scope.bounds=cartomap.getBounds();var center=cartomap.getCenter(),zoom=cartomap.getZoom();$scope.mapCenter.lat=center.lat,$scope.mapCenter.lng=center.lng,$scope.mapCenter.zoom=zoom});var gpsStyle={radius:3,weight:8,color:"#4C87C7",fill:!0,opacity:1};cartomap.addControl(new $scope.L.Control.Gps({style:gpsStyle})),Maps.get({mapId:$stateParams.mapId}).$promise.then(function(map){var baseMap=map.baseMap;if(void 0!==map.baseMap){var layer=$scope.L.tileLayer(baseMap.url,{attribution:'&copy; <a href="http://www.rodekruis.nl" target="_new">Rode Kruis</a>'});cartomap.addLayer(layer),layer.layer_name=baseMap.name,layer.setZIndex(1),$scope.baseLayers[baseMap.name]=layer}$stateParams.centerLat&&$stateParams.centerLng&&$stateParams.centerZoom?cartomap.setView(new $scope.L.latLng($stateParams.centerLat,$stateParams.centerLng),$stateParams.centerZoom):($scope.mapCenter=map.mapCenter,cartomap.setView(new $scope.L.latLng($scope.mapCenter.lat,$scope.mapCenter.lng),$scope.mapCenter.zoom)),$scope.infos.title=map.title,$scope.infos.info=map.description,$scope.infos.layers=[];var urlLayersSet=!1,activeLayers=[];$stateParams.activeLayers&&(activeLayers=$stateParams.activeLayers.split(","),urlLayersSet=!0);for(var vId in map.visualisation){var visualisation=map.visualisation[vId];urlLayersSet&&(visualisation.visible=activeLayers.indexOf(visualisation._id)>-1?!0:!1),addVisualisation(cartomap,visualisation),$scope.infos.layers.push({title:visualisation.name,info:visualisation.description})}for(var wmsId in map.wmsLayer){var wmsLayer=map.wmsLayer[wmsId];urlLayersSet&&(wmsLayer.visible=activeLayers.indexOf(map.wmsLayer[wmsId]._id)>-1?!0:!1),addWmsLayer(cartomap,wmsLayer),$scope.infos.layers.push({title:wmsLayer.name,info:wmsLayer.description})}for(var wfsId in map.wfsLayer){var wfsLayer=map.wfsLayer[wfsId];urlLayersSet&&(wfsLayer.visible=activeLayers.indexOf(map.wfsLayer[wfsId]._id)>-1?!0:!1),addWfsLayer(cartomap,wfsLayer),$scope.infos.layers.push({title:wfsLayer.name,info:wfsLayer.description})}}),cartomap.invalidateSize(),$scope.loadSearchControl(cartomap)});var addVisualisation=function(cartomap,visualisation){$scope.cartodb.createLayer(cartomap,visualisation.apiUrl,{https:!0,legends:!1}).addTo(cartomap).on("done",function(layer){if(layer.setInteraction(!0),layer.setZIndex(visualisation.zindex),layer.layer_name=visualisation.name,layer.parentId=visualisation._id,layer.options.visible=visualisation.visible,visualisation.visible?$scope.addActiveLayer(visualisation._id):$scope.LMap.removeLayer(layer),$scope.overlayLayers[visualisation.name]=layer,layer.layers[0].hasOwnProperty("legend")&&"none"!==layer.layers[0].legend.type){var legend={},cartoLegend=layer.layers[0].legend;cartoLegend.data=cartoLegend.items;var rendered=new cdb.geo.ui.Legend(cartoLegend).render().el;legend.html=rendered.outerHTML,legend.name=visualisation.name,$scope.visualisationLegends.push(legend)}layer.on("featureOver",function(e,pos,latlng,data){$scope.cartodb.log.log(e,pos,latlng,data)}),layer.on("error",function(err){$scope.cartodb.log.log("error: "+err)})}).on("error",function(){$scope.cartodb.log.log("some error occurred")})},addWmsLayer=function(cartomap,wmsLayer){var wms=null;if(wms=wmsLayer.tiled?wmsLayer.featureInfo?$scope.L.tileLayer.betterWms(wmsLayer.url,{layers:wmsLayer.layers,format:wmsLayer.format,transparent:wmsLayer.transparent,version:wmsLayer.version}):$scope.L.tileLayer.wms(wmsLayer.url,{layers:wmsLayer.layers,format:wmsLayer.format,transparent:wmsLayer.transparent,version:wmsLayer.version}):new $scope.L.NonTiledLayer.WMS(wmsLayer.url,{layers:wmsLayer.layers,format:wmsLayer.format,transparent:wmsLayer.transparent,version:wmsLayer.version,pane:cartomap.getPanes().tilePane,zIndex:wmsLayer.zindex,opacity:wmsLayer.opacity},wmsLayer.featureInfo),null!==wms){wms.addTo(cartomap);wms.setZIndex(wmsLayer.zindex),wms.layer_name=wmsLayer.name,wms.parentId=wmsLayer._id,wms.options.visible=wmsLayer.visible,wmsLayer.visible?$scope.addActiveLayer(wmsLayer._id):$scope.LMap.removeLayer(wms),$scope.overlayLayers[wmsLayer.name]=wms;var legendOptions=wmsLayer.legendOptions;""!==wmsLayer.legendOptions&&(legendOptions=JSON.parse(wmsLayer.legendOptions));var legends=wms.getLegendGraphic(legendOptions),legend={};for(var l in legends)legend.url=legends[l],legend.name=wmsLayer.name,$scope.wmsLegends.push(legend)}},addWfsLayer=function(cartomap,wfsLayer){function style(){return{weight:wfsLayer.featureStyle.weight,opacity:wfsLayer.featureStyle.opacity,color:wfsLayer.featureStyle.color,dashArray:wfsLayer.featureStyle.dashArray,fillOpacity:wfsLayer.featureStyle.fillOpacity,fillColor:wfsLayer.featureStyle.fillColor}}function featureUrl(wfsLayer){var crsString="",crs="";wfsLayer.crs.length>0&&(crs=wfsLayer.crs[0],crs.indexOf("EPSG")>-1&&crs.indexOf(!1)&&(crs=[crs.slice(0,4),":",crs.slice(4)].join("")),crsString="&srsName="+crs);var bboxString="";if(null!==$scope.bounds){var bboxCrs="";""!==crs&&(bboxCrs=","+crs),bboxString="&BBOX="+$scope.bounds.toBBoxString()+bboxCrs}return encodeURIComponent(wfsLayer.url+"?request=GetFeature&outputformat=json&version="+wfsLayer.version+"&typeName="+wfsLayer.featureType+crsString+bboxString)}function onEachFeature(feature,layer){feature.properties&&feature.properties[wfsLayer.hoverProperty]&&layer.bindPopup(feature.properties[wfsLayer.hoverProperty])}function pointToLayer(feature,latlng){return $scope.L.circleMarker(latlng,geojsonMarkerOptions)}var geojsonMarkerOptions={radius:wfsLayer.markerStyle.radius,fillColor:wfsLayer.markerStyle.fillColor,color:wfsLayer.markerStyle.color,weight:wfsLayer.markerStyle.weight,opacity:wfsLayer.markerStyle.opacity,fillOpacity:wfsLayer.markerStyle.fillOpacity};$scope.loading=Proxy.get({url:featureUrl(wfsLayer)}).$promise.then(function(response){response.type&&"FeatureCollection"===response.type&&$scope.L.geoJson(response,{pointToLayer:pointToLayer,style:style,onEachFeature:onEachFeature}).addTo(cartomap).on("done",function(layer){layer.setZIndex(wfsLayer.zindex),layer.layer_name=wfsLayer.name,layer.parentId=wfsLayer._id,layer.options.visible=wfsLayer.visible,wfsLayer.visible?$scope.addActiveLayer(wfsLayer._id):$scope.LMap.removeLayer(layer),$scope.overlayLayers[wfsLayer.name]=layer})})};$scope.toggleLayer=function(layer,e){e.preventDefault(),e.stopPropagation(),$scope.LMap.hasLayer(layer)?($scope.LMap.removeLayer(layer),layer.options.visible=!1,$scope.deleteActiveLayer(layer.parentId)):($scope.LMap.addLayer(layer),layer.options.visible=!0,$scope.addActiveLayer(layer.parentId))}}}]),angular.module("maps").directive("layermenu",function($compile){return{template:"<div></div>",replace:!0,link:function(scope,element){var container=scope.menuContainer;$compile(container)(scope),element.append(container)}}}).directive("htmlparse",[function($compile,$parse){return{template:"<div></div>",restrict:"E",link:function(scope,element,attr){$parse(attr.content)(scope);element.html=angular.element($parse(attr.content)(scope));var test=$compile(element)(scope);element.append(test)}}}]).directive("ngLegendClick",["$modal",function($modal){var ModalInstanceCtrl=function($scope,$modalInstance,wmsLegends,wfsLegends,visualisationLegends){$scope.wmsLegends=wmsLegends,$scope.wfsLegends=wfsLegends,$scope.visualisationLegends=visualisationLegends,$scope.ok=function(){$modalInstance.close()}};return{restrict:"A",scope:!0,link:function(scope,element){element.bind("click",function(){var modalInstance=$modal.open({templateUrl:"modules/maps/views/legends.client.template.html",controller:ModalInstanceCtrl,size:scope.size,resolve:{wmsLegends:function(){return scope.wmsLegends},wfsLegends:function(){return scope.wfsLegends},visualisationLegends:function(){return scope.visualisationLegends}}});modalInstance.result.then(function(){},function(){})})}}}]).directive("ngInfoClick",["$modal",function($modal){var ModalInstanceCtrl=function($scope,$modalInstance,infos){$scope.infos=infos,$scope.ok=function(){$modalInstance.close()}};return{restrict:"A",scope:!0,link:function(scope,element){element.bind("click",function(){var modalInstance=$modal.open({templateUrl:"modules/maps/views/infos.client.template.html",controller:ModalInstanceCtrl,size:scope.size,resolve:{infos:function(){return scope.infos}}});modalInstance.result.then(function(){},function(){})})}}}]).directive("ngShareClick",["$modal",function($modal){var ModalInstanceCtrl=function($scope,$modalInstance,mapCenter,baseUrl,mapParameters,activeLayers){$scope.mapCenter=mapCenter,$scope.baseUrl=baseUrl,$scope.mapParameters=mapParameters,$scope.activeLayers=activeLayers,$scope.ok=function(){$modalInstance.close()}};return{restrict:"A",scope:!0,link:function(scope,element){element.bind("click",function(){var modalInstance=$modal.open({templateUrl:"modules/maps/views/share.client.template.html",controller:ModalInstanceCtrl,size:scope.size,resolve:{mapCenter:function(){return scope.mapCenter},baseUrl:function(){return scope.baseUrl},mapParameters:function(){return scope.mapParameters},activeLayers:function(){return scope.activeLayers.join(",")}}});modalInstance.result.then(function(){},function(){})})}}}]).directive("heightresize",["$window",function($window,$rootScope){return{restrict:"A",link:function(scope,elem){var window=angular.element($window);scope.onResize=function(){$(elem).height(window.height()-$(".navbar").height()-$(".mapHeader").height()),"undefined"!=typeof $rootScope&&$rootScope.hasOwnProperty("LMap")&&$rootScope.LMap.invalidateSize()},scope.onResize(),window.bind("resize",function(){scope.onResize(),scope.$apply()})}}}]),angular.module("maps").filter("unsafehtml",["$sce",function($sce){return function(input){return $sce.trustAsHtml(input)}}]).filter("unsafesource",["$sce",function($sce){return function(input){return $sce.trustAsResourceUrl(input)}}]),angular.module("maps").factory("_",["$window",function($window){return $window._}]).factory("Maps",["$resource",function($resource){return $resource("maps/:mapId",{mapsId:"@_id"},{update:{method:"PUT"}})}]).factory("Proxy",["$resource",function($resource){return $resource("proxy/:url",{url:"@_id"})}]).factory("CartoDB",["$resource",function($resource){return $resource("cartodb/:table",{table:"@_id"})}]),angular.module("monitors").run(["Menus","gettextCatalog",function(Menus,gettextCatalog){var title=gettextCatalog.getString("Web monitor");Menus.addMenuItem("topbar",title,"monitors")}]),angular.module("monitors").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMonitors",{url:"/monitors",templateUrl:"modules/monitors/views/list-monitors.client.view.html"}).state("createMonitor",{url:"/monitors/create",templateUrl:"modules/monitors/views/create-monitor.client.view.html"}).state("viewMonitor",{url:"/monitors/:monitorId",templateUrl:"modules/monitors/views/view-monitor.client.view.html"}).state("editMonitor",{url:"/monitors/:monitorId/edit",templateUrl:"modules/monitors/views/edit-monitor.client.view.html"})}]),angular.module("monitors").controller("MonitorsController",["$scope","$stateParams","$location","Authentication","Monitors","$sce","$interval","$window",function($scope,$stateParams,$location,Authentication,Monitors,$sce,$interval,$window){$scope.authentication=Authentication,$scope.monitorIndex=0,$scope.currentMonitor=null;var window=angular.element($window);$scope.create=function(){var monitor=new Monitors({title:this.title,content:this.content});monitor.$save(function(response){$location.path("monitors/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.title="",this.content=""},$scope.remove=function(monitor){if(monitor){monitor.$remove();for(var i in $scope.monitors)$scope.monitors[i]===monitor&&$scope.monitors.splice(i,1)}else $scope.monitor.$remove(function(){$location.path("monitors")})},$scope.update=function(){var monitor=$scope.monitor;monitor.$update(function(){$location.path("monitors/"+monitor._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.monitors=Monitors.query(),$scope.monitors.$promise.then(function(){$scope.setCurrentMonitor()})},$scope.findOne=function(){$scope.monitor=Monitors.get({monitorId:$stateParams.monitorId})},$scope.onResize=function(){var newHeight=window.height()-$(".navbar").height()-$(".monitorHeader").height();$(".monitorVerticalStretch").css("height",newHeight),$(".monitorVerticalStretch").css("minHeight",newHeight)},$scope.onResize(),window.bind("resize",function(){$scope.onResize()}),$scope.setCurrentMonitor=function(){$scope.currentMonitor=$scope.monitors[$scope.monitorIndex]},$scope.prev=function(){0===$scope.monitorIndex?$scope.monitorIndex=$scope.monitors.length-1:$scope.monitorIndex--,$scope.setCurrentMonitor()},$scope.next=function(){$scope.monitorIndex===$scope.monitors.length-1?$scope.monitorIndex=0:$scope.monitorIndex++,$scope.setCurrentMonitor()},$scope.swipe=!0,$scope.toggleSwipe=function(){$scope.swipe=!$scope.swipe},$scope.rotate=!1,$scope.toggleRotate=function(){$scope.rotate=!$scope.rotate,$scope.rotate?$scope.interval=$interval($scope.next,2e4):$interval.cancel($scope.interval)},$scope.$on("$destroy",function(){angular.isDefined($scope.interval)&&($interval.cancel($scope.interval),$scope.interval=void 0)})}]),angular.module("monitors").directive("heightresize",["$window",function($window){return{restrict:"A",link:function(scope,elem){var window=angular.element($window);scope.onResize=function(){$(elem).height(window.height()-$(".navbar").height()-$(".monitorHeader").height())},scope.onResize(),window.bind("resize",function(){scope.onResize(),scope.$apply()})}}}]),angular.module("monitors").directive("htmlparse",[function($compile,$parse){return{template:"<div></div>",restrict:"E",link:function(scope,element,attr){$parse(attr.content)(scope);element.html=angular.element($parse(attr.content)(scope));var test=$compile(element)(scope);element.append(test)}}}]),angular.module("monitors").directive("twitterTimeline",[function(){return{restrict:"A",scope:{cssUrl:"@",autoResize:"="},link:function(scope,element,attrs){function render(){function setHeight(){0===body.find(".stream").length?setTimeout(setHeight,100):(body.find(".stream").addClass("stream-new").removeClass("stream").css("height","auto"),angular.element(".twitter-timeline").css("height",body.height()+20+"px"))}var body=angular.element(".twitter-timeline").contents().find("body");scope.cssUrl&&body.append(angular.element("<link/>",{rel:"stylesheet",href:scope.cssUrl,type:"text/css"})),scope.autoResize&&setHeight()}angular.element("body").removeAttr("data-twttr-rendered"),element.attr("id","twitter-feed").attr("width","100%").attr("data-chrome","noheader transparent").attr("data-widget-id",attrs.twitterTimeline).addClass("twitter-timeline"),angular.element("#twitter-wjs").length||$.getScript((/^http:/.test(document.location)?"http":"https")+"://platform.twitter.com/widgets.js",function(){render(),angular.element(".twitter-timeline").load(render)})}}}]),angular.module("monitors").directive("wtTime",[function($interval){return{restrict:"A",scope:!0,replace:!0,template:'<div>Time<div class="alert alert-success">{{time}}</div></div>',link:function(scope){function update(){scope.time=(new Date).toLocaleTimeString()}var promise=$interval(update,500);scope.$on("$destroy",function(){$interval.cancel(promise)})}}}]).directive("wtScopeWatch",[function(){return{restrict:"A",replace:!0,template:'<div>Value<div class="alert alert-info">{{value}}</div></div>',scope:{value:"=value"}}}]).directive("iframe",[function($compile,$parse){return{restrict:"A",scope:!0,replace:!0,template:'<iframe id="iframe" src="url | unsafehtml"></iframe>',link:function(scope,element,attr){scope.$watch(attr.url,function(){element.html($parse(attr.url)(scope)),$compile(element.contents())(scope)},!0)}}}]).directive("twitter",[function(){return{restrict:"A",scope:{widgetId:"=widgetId"},replace:!0,templateUrl:"/modules/monitors/templates/twitterWidget.html"}}]),angular.module("monitors").filter("unsafehtml",["$sce",function($sce){return function(input){return $sce.trustAsHtml(input)}}]).filter("unsafesource",["$sce",function($sce){return function(input){return $sce.trustAsResourceUrl(input)}}]),angular.module("monitors").factory("Monitors",["$resource",function($resource){return $resource("monitors/:monitorId",{monitorId:"@_id"},{update:{method:"PUT"}})}]),angular.module("sources").run(["Menus","gettextCatalog",function(Menus,gettextCatalog){var title=gettextCatalog.getString("Sources");Menus.addMenuItem("topbar",title,"sources","sources",!1,["admin"])}]),angular.module("sources").config(["$stateProvider",function($stateProvider){$stateProvider.state("listSources",{url:"/sources",templateUrl:"modules/sources/views/list-sources.client.view.html"}).state("createSource",{url:"/sources/create",templateUrl:"modules/sources/views/create-source.client.view.html"}).state("viewSource",{url:"/sources/:sourceId",templateUrl:"modules/sources/views/view-source.client.view.html"}).state("editSource",{url:"/sources/:sourceId/edit",templateUrl:"modules/sources/views/edit-source.client.view.html"})}]).config(function($sceDelegateProvider){$sceDelegateProvider.resourceUrlWhitelist(["self","https://docs.google.com/spreadsheets/d//**"]),$sceDelegateProvider.resourceUrlBlacklist(["http://myapp.example.com/clickThru**"])}),angular.module("sources").controller("SourcesController",["$scope","$stateParams","$location","Authentication","Sources",function($scope,$stateParams,$location,Authentication,Sources){$scope.authentication=Authentication,$scope.create=function(){var source=new Sources({name:this.name});source.$save(function(response){$location.path("sources/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name=""},$scope.remove=function(source){if(source){source.$remove();for(var i in $scope.sources)$scope.sources[i]===source&&$scope.sources.splice(i,1)}else $scope.source.$remove(function(){$location.path("sources")})},$scope.update=function(){var source=$scope.source;source.$update(function(){$location.path("sources/"+source._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.sources=Sources.query()},$scope.findOne=function(){$scope.source=Sources.get({sourceId:$stateParams.sourceId})}}]),angular.module("sources").directive("resizeheight",["$window",function($window){return{restrict:"A",link:function(scope,elem){var window=angular.element($window);scope.onResize=function(){window.height(),$(".navbar").height(),$(".sourceHeader").height();$(elem).height(window.height()-$(".navbar").height()-$(".sourceHeader").height())},scope.onResize(),window.bind("resize",function(){scope.onResize(),scope.$apply()})}}}]).directive("iframe",[function($compile,$parse){return{restrict:"A",scope:!0,replace:!0,template:'<iframe id="iframe" src="url | unsafehtml"></iframe>',link:function(scope,element,attr){scope.$watch(attr.url,function(){element.html($parse(attr.url)(scope)),$compile(element.contents())(scope)},!0)}}}]),angular.module("sources").filter("unsafehtml",["$sce",function($sce){return function(input){return $sce.trustAsHtml(input)}}]).filter("unsafesource",["$sce",function($sce){return function(input){return $sce.trustAsResourceUrl(input)}}]),angular.module("sources").factory("Sources",["$resource",function($resource){return $resource("sources/:sourceId",{sourceId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")
}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication","$window",function($scope,$http,$location,Users,Authentication,$window){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response,$window.location.reload()},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})},$scope.languages=[{id:"nl_NL",name:"Nederlands"},{id:"en_EN",name:"English"}]}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);