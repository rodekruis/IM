"use strict";var ApplicationConfiguration=function(){var applicationModuleName="im",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","leaflet-directive","angular-centered","akoenig.deckgrid","ui.dashboard","ui.sortable","ngRoute","angular-lodash","ngGrid","formsAngular","angular-carousel"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("forms"),ApplicationConfiguration.registerModule("maps"),ApplicationConfiguration.registerModule("monitors"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("otherwise",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed}}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,angular.extend($scope,{defaults:{tileLayer:"http://{s}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png",maxZoom:14,zoomControl:!1,path:{weight:10,color:"#800000",opacity:1}}}),angular.extend($scope,{layers:{baselayers:{osm:{name:"OpenStreetMap",url:"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",type:"xyz"}}}}),angular.extend($scope,{center:{lat:52.1185523,lng:5.2097174,zoom:10}})}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender}),this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].menuItemURL===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("maps").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Data management","forms","forms",!1,["admin"])}]),angular.module("formsAngular").config(["cssFrameworkServiceProvider",function(cssFrameworkService){cssFrameworkService.setOptions({framework:"bs3"})}]).config(["urlServiceProvider",function(urlService){urlService.setOptions({html5Mode:!1,hashPrefix:"!/forms"})}]),angular.module("forms").config(["$urlRouterProvider","$stateProvider",function($urlRouterProvider,$stateProvider){$stateProvider.state("model::all",{url:"/forms",templateUrl:"modules/forms/views/list-forms.client.view.html"}).state("model::edit",{url:"/forms/:model/:id/edit",templateUrl:"modules/forms/views/base-edit.client.view.html"}).state("model::new",{url:"/forms/:model/new",templateUrl:"modules/forms/views/base-edit.client.view.html"}).state("model::list",{url:"/forms/:model",templateUrl:"modules/forms/views/base-list.client.view.html"})}]),angular.module("forms").controller("FormsController",["$scope","$stateParams","$location","Authentication","Forms",function($scope,$stateParams,$location,Authentication,Forms){$scope.authentication=Authentication,$scope.find=function(){$scope.forms=Forms.query()}}]),angular.module("forms").factory("Forms",["$resource",function($resource){return $resource("api/models",{},{query:{method:"GET",isArray:!0}})}]),angular.module("maps").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Kaarten","maps")}]),angular.module("maps").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMaps",{url:"/maps",templateUrl:"modules/maps/views/list-maps.client.view.html"}).state("createMap",{url:"/maps/create",templateUrl:"modules/maps/views/create-map.client.view.html"}).state("viewMap",{url:"/maps/:mapId",templateUrl:"modules/maps/views/view-map.client.view.html"}).state("editMap",{url:"/maps/:mapId/edit",templateUrl:"modules/maps/views/edit-map.client.view.html"})}]),angular.module("maps").controller("MapsController",["$scope","$stateParams","$location","Authentication","Maps","$window","leafletData","$compile","layerService","$parse",function($scope,$stateParams,$location,Authentication,Maps,$window,leafletData,$compile,layerService){$scope.authentication=Authentication,$scope.L=$window.L,$scope.cartodb=$window.cartodb,$scope.create=function(){var map=new Maps({title:this.title});map.$save(function(response){$location.path("maps/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.title=""},$scope.remove=function(map){if(map){map.$remove();for(var i in $scope.maps)$scope.maps[i]===map&&$scope.maps.splice(i,1)}else $scope.map.$remove(function(){$location.path("maps")})},$scope.update=function(){var map=$scope.map;map.$update(function(){$location.path("maps/"+map._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.maps=Maps.query()},$scope.findOne=function(){$scope.map=Maps.get({mapId:$stateParams.mapId})},$scope.$watchCollection("checkModel",function(newValues,oldValues){var layers=$scope.LMap.layers;console.log($scope.LMap);for(var i in newValues)newValues[i]!==oldValues[i]&&(newValues[i]===!1?$scope.LMap.removeLayer(layers[i]):$scope.LMap.addLayer(layers[i]))},!0),$scope.loadLayers=function(){var addVisualisation=function(cartomap,visualisation){$scope.cartodb.createLayer(cartomap,visualisation.apiUrl).addTo(cartomap).on("done",function(layer){var table=visualisation.tableName,subLayerOptions={sql:"SELECT * FROM "+table},sublayer=layer.getSubLayer(0);sublayer.set(subLayerOptions),layer.setInteraction(!0),$scope.layerControl.addOverlay(layer,visualisation.name),layer.on("featureOver",function(e,pos,latlng,data){$scope.cartodb.log.log(e,pos,latlng,data)}),layer.on("error",function(err){$scope.cartodb.log.log("error: "+err)})}).on("error",function(){$scope.cartodb.log.log("some error occurred")})};leafletData.getMap().then(function(cartomap){$scope.LMap=cartomap,Maps.get({mapId:$stateParams.mapId}).$promise.then(function(map){var baseMap=map.baseMap,mapCenter=map.mapCenter,baselayers={};if(void 0!==map.baseMap){var layer=$scope.L.tileLayer(baseMap.url);cartomap.addLayer(layer),baselayers[baseMap.name]=layer}$scope.layerControl=$scope.L.control.activeLayers(baselayers,{},{collapsed:!1}),cartomap.setView(new $scope.L.latLng(mapCenter.lat,mapCenter.lng),mapCenter.zoom),$scope.radioModel="",$scope.checkModel={};var layers=[];for(var vId in map.visualisation){var visualisation=map.visualisation[vId];addVisualisation(cartomap,visualisation),layers.push({id:visualisation._id,name:visualisation.name})}layerService.setLayers(layers),layerService.setBaseLayers([{id:"1234",name:baseMap.name}])})})}}]),angular.module("maps").directive("layermenu",function($compile){return{template:"<div></div>",replace:!0,link:function(scope,element){var container=scope.menuContainer;$compile(container)(scope),element.append(container)}}}),angular.module("maps").factory("Maps",["$resource",function($resource){return $resource("maps/:mapId",{mapsId:"@_id"},{update:{method:"PUT"}})}]).factory("layerService",["$rootScope",function($rootScope){return{baseLayers:function(){return $rootScope.baseLayers},setBaseLayers:function(layers){$rootScope.baseLayers=layers},layers:function(){return $rootScope.layers},setLayers:function(layers){$rootScope.layers=layers}}}]),angular.module("monitors").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Web monitor","monitors")}]),angular.module("monitors").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMonitors",{url:"/monitors",templateUrl:"modules/monitors/views/list-monitors.client.view.html"}).state("createMonitor",{url:"/monitors/create",templateUrl:"modules/monitors/views/create-monitor.client.view.html"}).state("viewMonitor",{url:"/monitors/:monitorId",templateUrl:"modules/monitors/views/view-monitor.client.view.html"}).state("editMonitor",{url:"/monitors/:monitorId/edit",templateUrl:"modules/monitors/views/edit-monitor.client.view.html"})}]),angular.module("monitors").factory("MonitorDataModel",function($interval,WidgetDataModel){function MonitorDataModel(){}return MonitorDataModel.prototype=Object.create(WidgetDataModel.prototype),MonitorDataModel.prototype.init=function(){this.intervalPromise=$interval(function(){var value=Math.floor(100*Math.random());this.updateScope(value)}.bind(this),500)},MonitorDataModel.prototype.destroy=function(){WidgetDataModel.prototype.destroy.call(this),$interval.cancel(this.intervalPromise)},MonitorDataModel}).factory("widgetDefinitions",function($sce,MonitorDataModel){return[{name:"time",directive:"wt-time"},{name:"twitter",directive:"twitter",attrs:{widgetId:"456383502380834816"}},{name:"iframe",directive:"iframe",attrs:{url:"http://www.google.nl"}},{name:"datamodel",directive:"wt-scope-watch",dataAttrName:"value",dataModelType:MonitorDataModel}]}).value("defaultWidgets",[{name:"datamodel"},{name:"time",style:{width:"50%",height:"50%"}},{name:"iframe",style:{width:"50%",height:"50%"}},{name:"twitter",style:{width:"50%",height:"100%"}}]).controller("MonitorsController",["$scope","$stateParams","$location","Authentication","Monitors","$sce","$interval","$window","widgetDefinitions","defaultWidgets",function($scope,$stateParams,$location,Authentication,Monitors,$sce,$interval,$window,widgetDefinitions,defaultWidgets){$scope.authentication=Authentication,$scope.create=function(){var monitor=new Monitors({title:this.title,content:this.content});monitor.$save(function(response){$location.path("monitors/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.title="",this.content=""},$scope.remove=function(monitor){if(monitor){monitor.$remove();for(var i in $scope.monitors)$scope.monitors[i]===monitor&&$scope.monitors.splice(i,1)}else $scope.monitor.$remove(function(){$location.path("monitors")})},$scope.update=function(){var monitor=$scope.monitor;monitor.$update(function(){$location.path("monitors/"+monitor._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.monitors=Monitors.query()},$scope.findOne=function(){$scope.monitor=Monitors.get({monitorId:$stateParams.monitorId})},$scope.dashboardOptions={widgetButtons:!0,widgetDefinitions:widgetDefinitions,defaultWidgets:defaultWidgets,storage:window.localStorage,storageId:"explicitSave",explicitSave:!0},$scope.monitorIndex=0,$scope.prev=function(){0===$scope.monitorIndex?$scope.monitorIndex=$scope.monitors.length-1:$scope.monitorIndex--},$scope.next=function(){$scope.monitorIndex===$scope.monitors.length-1?$scope.monitorIndex=0:$scope.monitorIndex++},$scope.swipe=!0,$scope.toggleSwipe=function(){$scope.swipe=!$scope.swipe},$scope.rotate=!1,$scope.toggleRotate=function(){$scope.rotate=!$scope.rotate,$scope.rotate?$scope.interval=$interval($scope.next,2e4):$interval.cancel($scope.interval)},$scope.$on("$destroy",function(){angular.isDefined($scope.interval)&&($interval.cancel($scope.interval),$scope.interval=void 0)})}]),angular.module("monitors").directive("htmlparse",[function($compile,$parse){return{template:"<div></div>",restrict:"E",link:function(scope,element,attr){$parse(attr.content)(scope);element.html=angular.element($parse(attr.content)(scope));var test=$compile(element)(scope);element.append(test)}}}]),angular.module("monitors").directive("twitterTimeline",[function(){return{restrict:"A",scope:{cssUrl:"@",autoResize:"="},link:function(scope,element,attrs){function render(){function setHeight(){0===body.find(".stream").length?setTimeout(setHeight,100):(body.find(".stream").addClass("stream-new").removeClass("stream").css("height","auto"),angular.element(".twitter-timeline").css("height",body.height()+20+"px"))}var body=angular.element(".twitter-timeline").contents().find("body");scope.cssUrl&&body.append(angular.element("<link/>",{rel:"stylesheet",href:scope.cssUrl,type:"text/css"})),scope.autoResize&&setHeight()}angular.element("body").removeAttr("data-twttr-rendered"),element.attr("id","twitter-feed").attr("width","100%").attr("data-chrome","noheader transparent").attr("data-widget-id",attrs.twitterTimeline).addClass("twitter-timeline"),angular.element("#twitter-wjs").length||$.getScript((/^http:/.test(document.location)?"http":"https")+"://platform.twitter.com/widgets.js",function(){render(),angular.element(".twitter-timeline").load(render)})}}}]),angular.module("monitors").directive("wtTime",[function($interval){return{restrict:"A",scope:!0,replace:!0,template:'<div>Time<div class="alert alert-success">{{time}}</div></div>',link:function(scope){function update(){scope.time=(new Date).toLocaleTimeString()}var promise=$interval(update,500);scope.$on("$destroy",function(){$interval.cancel(promise)})}}}]).directive("wtScopeWatch",[function(){return{restrict:"A",replace:!0,template:'<div>Value<div class="alert alert-info">{{value}}</div></div>',scope:{value:"=value"}}}]).directive("iframe",[function($compile,$parse){return{restrict:"A",scope:!0,replace:!0,template:'<iframe id="iframe" src="url | unsafehtml"></iframe>',link:function(scope,element,attr){scope.$watch(attr.url,function(){element.html($parse(attr.url)(scope)),$compile(element.contents())(scope)},!0)}}}]).directive("twitter",[function(){return{restrict:"A",scope:{widgetId:"=widgetId"},replace:!0,templateUrl:"/modules/monitors/templates/twitterWidget.html"}}]),angular.module("monitors").filter("unsafehtml",["$sce",function($sce){return function(input){return $sce.trustAsHtml(input)}}]).filter("unsafesource",["$sce",function($sce){return function(input){return $sce.trustAsResourceUrl(input)}}]),angular.module("monitors").factory("Monitors",["$resource",function($resource){return $resource("monitors/:monitorId",{monitorId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);